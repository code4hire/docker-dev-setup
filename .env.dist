# Application's path (absolute or relative)
# **IMPORTANT**
# If you are using docker-sync, the path is relative to the location of this file
# if you are NOT using docker-sync, and just docker-compose,
# the path is relative to the location of docker-compose.yml
APP_PATH=./application

# Path inside of container where the APP_PATH will be mounted,
# This var can also be used as workdir value for docker
# MAKE SURE IT HAS THE SAME VALUE AS `DEST` KEY IN docker-sync.yml
# MAKE SURE THE VALUE IS IN SYNC WITH docker/nginx/symfony.conf line 3
DESTINATION_PATH=/application

# Path where to mount logs, redis, and mysql data
# This is relative to the position of the docker-compose.yml
DATA_PATH=./data

# Nginx configuration customization
NGINX_PROJECT_ROOT=/application/web
NGINX_ENTRY_POINT_FILE=app_dev.php
NGINX_ALLOWED_FILES="app|app_dev|app_test|config"

# docker-sync volume name
SYNC_NAME=application

# location of docker-compose.yml
DOCKER_SYNC_LOCATION=./docker-sync.yml

# Sets the project name. This value is prepended along with the service name to the container on start up.
# For example, if you project name is myapp and it includes two services db and web then compose starts
# containers named myapp_db_1 and myapp_web_1 respectively.
#
# Setting this is optional. If you do not set this, the COMPOSE_PROJECT_NAME defaults to the basename of
# the project directory.
# This should be the same value as SYNC_NAME
#COMPOSE_PROJECT_NAME=

#Specify the path to a Compose file. If not provided, Compose looks for a file named docker-compose.yml
# in the current directory and then each parent directory in succession until a file by that name is found.
#
# This variable supports multiple compose files separate by a path separator
# (on Linux and macOS the path separator is :, on Windows it is ;).
# For example: COMPOSE_FILE=docker-compose.yml:docker-compose.prod.yml
COMPOSE_FILE=./docker-compose.yml:./docker-compose-dev.yml

# Specify the php version you will use with cli
# Possible values are 5.6, 7.0 or 7.1, the default is 7.1
#PHP_VERSION=7.1

# Ip of the host that docker can reach
HOST_IP=10.254.254.254

# Xdebug IDE key
IDEKEY=docker-xdebug

# MySQL
MYSQL_ROOT_PASSWORD=root
MYSQL_DATABASE=mydb
MYSQL_USER=user
MYSQL_PASSWORD=userpass

# RabbitMQ
RABBITMQ_ERLANG_COOKIE='secret cookie here'
RABBITMQ_DEFAULT_USER=admin
RABBITMQ_DEFAULT_PASS=admin
RABBITMQ_DEFAULT_VHOST=/
#RABBITMQ_NODENAME=
